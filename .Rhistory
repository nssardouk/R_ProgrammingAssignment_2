install.packages("swirl")
quit()
install.packages("swirl")
quit()
install.packages("swirl")
packageVersion("swirl")
quit()
library(swirl)
swirl()
submit()
evaluate(stderr, c(1.4, 3.6, 7.9, 8.8))
evaluate(func=stderr, dat=c(1.4, 3.6, 7.9, 8.8))
args(evaluate)
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[[1]]}, c(8, 4, 0))
evaluate(function(x){x[[3]]}, c(8, 4, 0))
evaluate(function(x){x[[length(x)]]}, c(8, 4, 0))
paste?
q
help paste
paste help
help(paste)
?paste
paste("Programming", "is", "fun!")
submit
submit()
submit()
telegram("Hi", "Nabil")
submit()
submit()
args(mad_libs)
submit()
submit()
paste("hello", " ", "World")
submit()
submit()
submit()
submit()
info()
submit()
buye()
bye()
quit()
library(swirl)
swirl()
submit()
submit
submit()
'Good' %p% 'job!'
submit()
submit
submit()
%p%
submit()
submit()
info()
skip()
submit()
'I'%p%''love'%p%'R!'
'I'%p%''love'
'I'%p%'love'%p%'R!'
info()
bye()
quit
quit()
x  <- 1
x
print(x)
msg <- "Hello"
msg
print(msg)
type(msg)
class(msg)
class(x)
demo()
x <- 1:5
xA
x <- 1:20
x <- 1:200
x
x <- "1"
x
class(x)
as.integer(x)
x
class(x)
x <- as.integer(x)
class(x)
dir(x)
quit()
library("swirl")
swirl()
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3", recursive = T))
dir.create(file.path("testdir2", "testdir3") recursive = T)
dir.create(file.path("testdir2", "testdir3") recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = T)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
ls()
setwd(old.dir)
unlink("testdir", recursive = T)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?:
?:
?`:`
seq(1,20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_mean())
1:length(my_seq
)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2))
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each = 10)
quit()
library("swirl")
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf[num_vect <1]
tf <- num_vect[<1]
num_vect
tf <- num_vect < 1
tf
tf2 <- num_vect >= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = "Nabil")
paste(my_char, collapse = " Nabil")
paste(my_char, collapse = " "
)
my_name <- c(my_char, "Nabil")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
byt()
bye()
quit()
makeCacheMatrix <- function(x = matrix()) {
}
x
str(x)
y <- matrix(1:4, 4:5)
y
y <- matrix(1:4, 4:8, nrow = 4, ncol= 4)
y
makeCacheMatrix(y)
y
x
makeCacheMatrix()
getwd()
list.files()
setwd("/home/nssardouk/git_local/R_ProgrammingAssignment_2")
getwd()
list.files()
source("cachematrix.R")
y$get()
y
z <- makeCacheMatrix(y)
z <- makeCacheMatrix(y)
source("cachematrix.R")
z <- makeCacheMatrix(y)
z
z()
z$get()
z$gInv()
cacheSolve(z)
mat2
x$get()
